{"Account":["event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","function RemoveItemFromVault(uint256 itemId)","function _data() view returns (bytes)","function _from() view returns (address)","function _id() view returns (uint256)","function _operator() view returns (address)","function account_contract_addr() view returns (address)","function approve(address to, address nftContract, uint256 tokenId)","function balance() view returns (uint256)","function is1155(address) view returns (bool)","function is721(address) view returns (bool)","function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) returns (bytes4)","function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes data) returns (bytes4)","function onERC721Received(address operator, address from, uint256 id, bytes data) returns (bytes4)","function owner() view returns (address)","function ownerOf(address nftContract, uint256 tokenId) view returns (address)","function play() view returns (uint256)","function renounceOwnership()","function rentNFT(address nftContract, uint256 tokenId, uint256 price, uint256 _seconds)","function safeBatchTransferFrom(address to, address nftContract, uint256[] ids, uint256[] amounts, bytes data)","function safeTransferFrom(address to, address nftContract, uint256 tokenId)","function safeTransferFrom(address to, address nftContract, uint256 tokenId, bytes data)","function safeTransferFrom(address to, address nftContract, uint256 tokenId, uint256 amount, bytes data)","function setApprovalForAll(address nftContract, address operator, bool _approved)","function supportsInterface(bytes4 interfaceId) view returns (bool)","function transferETH(address to, uint256 amount)","function transferFrom(address to, address nftContract, uint256 tokenId)","function transferOwnership(address newOwner)","function val() view returns (uint256)"],"AccountDeployer":["function deploy(address admin, address owner, address vault, address badgeNft) returns (address account)","function parameters() view returns (address admin, address owner, address vault, address badgeNft)"],"Admin":["event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event Paused(address account)","event Unpaused(address account)","function admin_contract_addr() view returns (address)","function owner() view returns (address)","function pause()","function paused() view returns (bool)","function renounceOwnership()","function transferOwnership(address newOwner)","function unpause()"],"Badge":["event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)","event ApprovalForAll(address indexed owner, address indexed operator, bool approved)","event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)","function Bronze() view returns (uint256)","function Gold() view returns (uint256)","function Silver() view returns (uint256)","function _setwalletAddress(address _wallet)","function addOwner(address owner_)","function addressMintedBalance(address) view returns (uint256)","function approve(address to, uint256 tokenId)","function balanceOf(address owner) view returns (uint256)","function baseURI() view returns (string)","function createToken(string _tokenURI, address account, uint8 _nftType) returns (uint256)","function getApproved(uint256 tokenId) view returns (address)","function isApprovedForAll(address owner, address operator) view returns (bool)","function maxSupply() view returns (uint256)","function name() view returns (string)","function nftType(uint256) view returns (uint256)","function owner() view returns (address)","function ownerOf(uint256 tokenId) view returns (address)","function renounceOwnership()","function safeTransferFrom(address from, address to, uint256 tokenId)","function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)","function setApprovalForAll(address operator, bool approved)","function supportsInterface(bytes4 interfaceId) view returns (bool)","function symbol() view returns (string)","function tokenByIndex(uint256 index) view returns (uint256)","function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)","function tokenType(uint256 id) view returns (uint256)","function tokenURI(uint256 tokenId) view returns (string)","function transferFrom(address from, address to, uint256 tokenId)","function transferOwnership(address newOwner)","function whitelistedAddresses(uint256) view returns (address)"],"ERC2099starz":["event Approval(address indexed owner, address indexed spender, uint256 value)","event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event Transfer(address indexed from, address indexed to, uint256 value)","function allowance(address owner, address spender) view returns (uint256)","function approve(address spender, uint256 amount) returns (bool)","function balanceOf(address account) view returns (uint256)","function burn(uint256 amount)","function burnFrom(address account, uint256 amount)","function decimals() view returns (uint8)","function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)","function increaseAllowance(address spender, uint256 addedValue) returns (bool)","function name() view returns (string)","function owner() view returns (address)","function symbol() view returns (string)","function totalSupply() view returns (uint256)","function transfer(address recipient, uint256 amount) returns (bool)","function transferFrom(address sender, address recipient, uint256 amount) returns (bool)","function transferOwnership(address newOwner)"],"Wallet":["event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event Paused(address account)","event Unpaused(address account)","function NFTexist(address, uint256) view returns (bool)","function admin_contract_addr() view returns (address)","function balance(address) view returns (uint256)","function createAccount(address vault_, address game, uint8 _nftType) returns (address)","function getGameSubAccounts(address game) view returns (address[])","function getUserAccounts() view returns (address[])","function idToAccount(uint256) view returns (address)","function owner() view returns (address)","function pause()","function paused() view returns (bool)","function renounceOwnership()","function setGameAccountslimit(address game, uint256 limit)","function setGameManager(address game, address _manager)","function transferOwnership(address newOwner)","function unpause()","function userAccount(address) view returns (address)"]}